@inject NavigationManager Navigation 
@inject Blazored.LocalStorage.ILocalStorageService Storage
@inject AuthenticationStateProvider AuthenticationState

<AuthorizeView>
    <Authorized>
        <MudMenu Icon="@Icons.Material.Filled.Settings">
            <MudMenuItem>Welcome @context.User.FindFirst(ClaimTypes.GivenName).Value</MudMenuItem>
            <MudMenuItem OnClick="LogOutAsync">Logout</MudMenuItem>
        </MudMenu>
    </Authorized>
    <NotAuthorized>
        <MudIconButton Icon="@Icons.Filled.Login" Color="Color.Secondary" OnClick='()=>Navigation.NavigateTo("/authentication/login")' />
    </NotAuthorized>
</AuthorizeView>

@code
{
    private async Task LogOutAsync()
    {
        await Storage.RemoveItemAsync("access_token");
        await Storage.RemoveItemAsync("Expiry_Date");

        await AuthenticationState.GetAuthenticationStateAsync();
        Navigation.NavigateTo("/authentication/login");
    }
}
